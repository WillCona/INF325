package com.example.webservicesadd;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity {
	
	public static String miURL = "http://clasespersonales.com/giros/";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	}
	
	class CargaZonas extends AsyncTask<String, Void, String>{

		@Override
		protected String doInBackground(String... arg0) {
			// TODO Auto-generated method stub
			return BajarDatos(arg0[0]);
		}
		
		@Override
		protected void onPostExecute(String resultado) {
			// TODO Auto-generated method stub
			String fin = "";
			
			
			TextView tv = (TextView) findViewById(R.id.textView6);
			

			//TextView tv = (TextView) findViewById(R.id.textView1);
			
			//String jsonString = resultado;
			try {
				
				JSONObject objeto = new JSONObject(resultado);
				JSONArray zonasArray = objeto.getJSONArray("clientes");
				for (int i = 0; i < zonasArray.length(); i++) {
		            JSONObject zona = zonasArray.getJSONObject(i);
		            String codZon = zona.getString("id");
		            String descZon = zona.getString("ci");
		            String monto = zona.getString("monto");

		            fin = fin + codZon +"\t\t"+descZon+"\t\t"+monto+"\n";
		        }
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	       
			tv.setText(fin);
		}
		
	}
	
	class CargaZonas2 extends AsyncTask<String, Void, String>{

		@Override
		protected String doInBackground(String... arg0) {
			// TODO Auto-generated method stub
			return BajarDatos(arg0[0]);
		}
		
		@Override
		protected void onPostExecute(String resultado) {
			// TODO Auto-generated method stub
			String fin = "";
			double total = 0;
			
			TextView tv = (TextView) findViewById(R.id.textView6);
			
			tv.setText("");
			//TextView tv = (TextView) findViewById(R.id.textView1);
			
			//String jsonString = resultado;
			try {
				
				JSONObject objeto = new JSONObject(resultado);
				JSONArray zonasArray = objeto.getJSONArray("clientes");
				if (zonasArray.length()>0) {
					for (int i = 0; i < zonasArray.length(); i++) {
			            JSONObject zona = zonasArray.getJSONObject(i);
			            String codZon = zona.getString("id");
			            String descZon = zona.getString("ci");
			            String monto = zona.getString("monto");
			            total = total + Double.parseDouble(monto);
			            fin = fin + codZon +"\t\t"+descZon+"\t\t"+monto+"\n";
			        }
					fin = fin + "\n\nTOTAL:\t\t\t\t"+total;
				}else{
					fin = "No existe el CI.";
				}
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			tv.setText(fin);
		}
		
	}
	
	public void limpiar(View vista){
		TextView tv = (TextView) findViewById(R.id.textView6);
		tv.setText("");
	}
	
	public String BajarDatos(String url){
		InputStream pt = null;
		String r = "";
		try {
			URL sitio = new URL(url);
			HttpURLConnection uc = (HttpURLConnection) sitio.openConnection();
			
			pt = uc.getInputStream();
			if (pt!=null) {
				r = convierteString(pt);
			}else{
				r = "No hay conexion";
			}
		} catch (Exception e) {
			Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show();
		}
		return r;	
	
	}

	public String convierteString(InputStream bloque) throws IOException{
		String res="";
		BufferedReader br = new BufferedReader(new InputStreamReader(bloque));
		String linea;
		while ((linea = br.readLine()) != null) {
			res = res + linea;
		}
		return res;
	}
	
	
	public void IngresarDatos(View vista){
		EditText dt1 = (EditText) findViewById(R.id.editText1);
		EditText dt2 = (EditText) findViewById(R.id.editText2);
		
		String a = dt1.getText().toString();
		String b = dt2.getText().toString();
		
		if(a.length()>0 && b.length()>0){
			new CargaZonas().execute(miURL+"adigiro.php?qci="+a+"&qmonto="+0);
		}else{
			Toast.makeText(this, "Valores vacios vuelve a intentar caiman", 1);
		}
		
	}
	
	public void IngresarDatos2(View vista){
		EditText dt1 = (EditText) findViewById(R.id.editText1);
		EditText dt2 = (EditText) findViewById(R.id.editText2);
		
		new CargaZonas().execute(miURL+"listado.php");
	}
	
	public void IngresarDatos3(View vista){
		
		EditText et = (EditText) findViewById(R.id.editText3);
		
		if (et.getText().toString().length()>0) {
			try {
				new CargaZonas2().execute("http://clasespersonales.com/giros/listado.php?qci="+et.getText().toString());
				
			} catch (Exception e) {
				// TODO: handle exception
				
			}
			
		}else{
			Toast.makeText(this, "no ingreso un ci", 1).show();
		}
				
		
		
		
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	

}
